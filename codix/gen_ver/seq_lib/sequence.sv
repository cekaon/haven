/******************************************************************************
 *     "Copyright (C) 2013, ApS s.r.o Brno, All Rights Reserved"             *
 ******************************************************************************/
/**
 *  \file
 *  \date   Thu Jan 17 15:32:01 2013, generated by Codasip HW generator v1.6.0.
 *  \brief  Declaration of the class codix_ca_input_sequence.
 */

// This class represents OVM sequence of random input transactions for DUT/DUV.
class codix_ca_input_sequence extends ovm_sequence #(codix_ca_input_transaction);

	// member attributes, equivalent with interface ports
	rand logic default_codix_ca_irq;

	// default constrains for each input interface port
	constraint default_constraint_for_codix_ca_irq { default_codix_ca_irq == 0; }

	// pre-register the sequence with a given sequencer type
	`ovm_sequence_utils_begin( codix_ca_input_sequence, codix_ca_input_sequencer )
		`ovm_field_int( default_codix_ca_irq, OVM_ALL_ON )
	`ovm_sequence_utils_end

	// Constructor - creates new instance of this class
	function new( string name = "codix_ca_input_sequence" );
		super.new( name );
	endfunction: new

	// body - implements behavior of the transaction
	task body();
		forever
		begin
			// need to raise/drop objection before each item because we don't want
			// to be stopped in the middle of a transfer
			// ovm_test_done.raise_objection( this );
			`ovm_do_with( req,
			{
				req.codix_ca_irq == default_codix_ca_irq;
			} )
			// ovm_test_done.drop_objection( this );
		end
	endtask : body

endclass: codix_ca_input_sequence

