################################################################################
# "Copyright (C) 2013, ApS s.r.o Brno, All Rights Reserved"
#  Generated by Codasip HW generator v1.6.0
#  date: Thu Jan 17 15:32:01 2013
#  brief: Simulation start script.
################################################################################


# Create working library.
vlib work
vdel -all
vlib work

# DUT compilation
vcom -explicit -93 -cover sbce -work work ../vhdl/*.vhd
# Verification environment compilation
vlog test_parameters.sv
vlog ifc.sv
vlog +incdir+seq_lib/ seq_lib/sv_seq_pkg.sv
vlog +incdir+env_lib/ env_lib/sv_env_pkg.sv
vlog +incdir+test_lib/ test_lib/sv_test_pkg.sv
vlog dut.sv
vlog top_level.sv

# Find programs to run, first argument can represents one xexe program to run
if { $argc > 0 } {
	set PROGRAMS $1
} else {
	set PROGRAMS [lsort -dictionary [glob ./xexes/*.xexe]]
}
# Clear previous reports
file delete report.txt
file delete coverage.ucdb

# Set path to top level and DUT instance
set TOP_MODULE "codix_ca_top"
set HDL_DUT "$TOP_MODULE/dut/HDL_DUT_U"

# Start of the simulation
vsim -coverage -t 1ps -lib work $TOP_MODULE -sv_lib golden_model/libgm -keeploadedrestart
# Suppress warnings from arithmetic library
set StdArithNoWarnings 1

# View a simulation wave
source "./signals.fdo"
view wave

# Remove all waves first
delete wave *
# Definition of signals in a wave window
basic $HDL_DUT
add wave -divider "codix_ca processor interfaces"
icodix_ca_out /$TOP_MODULE/dut/icodix_ca_out_if
icodix_ca_in /$TOP_MODULE/dut/icodix_ca_in_if
ihalt /$TOP_MODULE/dut/ihalt_if
icodix_ca_mem /$TOP_MODULE/dut/icodix_ca_mem_if
icodix_ca_core_main_instr_hw_instr_hw /$TOP_MODULE/dut/icodix_ca_core_main_instr_hw_instr_hw_if
icodix_ca_core_regs /$TOP_MODULE/dut/icodix_ca_core_regs_if

# All signals in the processor design
add wave -divider "All signals in the DUT design"
add wave -r /$HDL_DUT/*

view structure
view signals

# Simulate all programs
foreach PROGRAM $PROGRAMS {
	# Prepare report
	exec echo -n "$PROGRAM\t\t" >> report.txt
	# Prepare program for HW
	exec cut -c1-8 $PROGRAM.hw > ./xexes/mem_subblock_0
	exec cut -c9-16 $PROGRAM.hw > ./xexes/mem_subblock_1
	exec cut -c17-24 $PROGRAM.hw > ./xexes/mem_subblock_2
	exec cut -c25-32 $PROGRAM.hw > ./xexes/mem_subblock_3
	# Prepare program for simulator
	exec cat $PROGRAM.sim > ./xexes/program

	restart -f

	# Load program into DUT memory
	mem load -i ./xexes/mem_subblock_0 -startaddress 0 -format binary /$HDL_DUT/codix_ca/mem/memory_0
	mem load -i ./xexes/mem_subblock_1 -startaddress 0 -format binary /$HDL_DUT/codix_ca/mem/memory_1
	mem load -i ./xexes/mem_subblock_2 -startaddress 0 -format binary /$HDL_DUT/codix_ca/mem/memory_2
	mem load -i ./xexes/mem_subblock_3 -startaddress 0 -format binary /$HDL_DUT/codix_ca/mem/memory_3

	# Set variables to run multiple programs
	onElabError resume
	onbreak resume
	onfinish stop

	# Run the simulation
	run -all
	# Save coverage from current run
	coverage save -codeAll -cvg "$PROGRAM.ucdb"
}

# merge coverage results from all runs
set COVER_RESULTS [glob ./xexes/*.ucdb]
vcover merge ./xexes/*.ucdb -out coverage.ucdb
# Generate coverage report
vcover report -html -htmldir covreport coverage.ucdb
# Delete coverage result for single program
foreach RESULT $COVER_RESULTS {
	file delete $RESULT
	}

