/******************************************************************************
 *     "Copyright (C) 2013, ApS s.r.o Brno, All Rights Reserved"             *
 ******************************************************************************/
/**
 *  \file
 *  \date   Thu Jan 17 15:32:01 2013, generated by Codasip HW generator v1.6.0.
 *  \brief  Definition of the scoreboard.
 */

// This class receives transactions from the driver and performs transformation of these transactions into the form of expected responses according to the specification. Afterwards, it receives transactions from the monitor and automatically compares these real responses with the expected ones.
class codix_ca_scoreboard extends ovm_scoreboard;

	// registration of component tools
	`ovm_component_utils( codix_ca_scoreboard )

	// queues to receive transaction from monitors and golden model
	tlm_analysis_fifo #(codix_ca_core_regs_transaction) m_dut_codix_ca_core_regs_fifo;
	tlm_analysis_fifo #(codix_ca_core_regs_transaction) m_golden_model_codix_ca_core_regs_fifo;
	tlm_analysis_fifo #(codix_ca_output_transaction) m_dut_codix_ca_output_fifo;
	tlm_analysis_fifo #(codix_ca_output_transaction) m_golden_model_codix_ca_output_fifo;

	// store last transaction register file content
	local codix_ca_core_regs_transaction m_dut_codix_ca_core_regs_transaction;
	local codix_ca_core_regs_transaction m_golden_model_codix_ca_core_regs_transaction;

	// Constructor - creates new instance of this class
	function new( string name, ovm_component parent );
		super.new( name, parent );
	endfunction: new

	// instantiates child components
	function void build();
		super.build();

		m_dut_codix_ca_core_regs_fifo = new( "m_dut_codix_ca_core_regs_fifo", this );
		m_golden_model_codix_ca_core_regs_fifo = new( "m_golden_model_codix_ca_core_regs_fifo", this );
		m_dut_codix_ca_output_fifo = new( "m_dut_codix_ca_output_fifo", this );
		m_golden_model_codix_ca_output_fifo = new( "m_golden_model_codix_ca_output_fifo", this );

	endfunction: build

	// starts the processing in scoreboard
	task run();
		forever
		begin
			codix_ca_output_transaction real_tr;
			m_dut_codix_ca_output_fifo.get( real_tr );
			// real_tr.print();

			// store the last transaction for check function
			m_dut_codix_ca_core_regs_fifo.flush();
		end
	endtask: run

	// compare DUTs and GMs memories and register files contents
	function void check();
		// pick up 'codix_ca_core_regs' content from DUT and GM
		assert( m_dut_codix_ca_core_regs_fifo.used() == 1 );
		assert( m_golden_model_codix_ca_core_regs_fifo.used() == 1 );
		assert( m_dut_codix_ca_core_regs_fifo.can_get() );
		assert( m_golden_model_codix_ca_core_regs_fifo.can_get() );
		assert( m_dut_codix_ca_core_regs_fifo.try_get(m_dut_codix_ca_core_regs_transaction) );
		assert( m_golden_model_codix_ca_core_regs_fifo.try_get(m_golden_model_codix_ca_core_regs_transaction) );
		m_dut_codix_ca_core_regs_fifo.flush();
		m_golden_model_codix_ca_core_regs_fifo.flush();

	endfunction: check

	// report comparison result of DUTs and GMs transactions
	function void report();
		automatic int fd = $fopen( "report.txt", "a" );
		automatic bit result_flag = 1;
		// edit comparer and printer settings
		automatic ovm_table_printer printer = new;
		automatic ovm_comparer comparer = new;
		comparer.show_max = -1;
		comparer.sev = OVM_ERROR;
		printer.knobs.begin_elements = -1;
		printer.knobs.value_width = -1;
		printer.knobs.name_width = 28;

		if ( !m_golden_model_codix_ca_core_regs_transaction.compare(
			m_dut_codix_ca_core_regs_transaction, comparer) )
		begin
			ovm_report_error( get_type_name(), "'regs': The results do not correspond!\n" );
			result_flag = 0;
		end
		else
		begin
			ovm_report_info( get_type_name(), "'regs': The result is OK!\n" );
		end
		// m_dut_codix_ca_core_regs_transaction.print( printer );
		// m_golden_model_codix_ca_core_regs_transaction.print( printer );
		// write final test status.
		if ( result_flag )
			$fwrite( fd, "ok\n" );
		else
		begin
			$fwrite( fd, "fail\n" );
			$fwrite( fd, $psprintf("%s\n", comparer.miscompares) );
		end
		$fclose( fd );
	endfunction: report

endclass: codix_ca_scoreboard
